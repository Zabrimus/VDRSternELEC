From 13b0e1086fd417d79f05fb7ec523a7349366ba8d Mon Sep 17 00:00:00 2001
From: Andreas Baierl <ichgeh@imkreisrum.de>
Date: Thu, 12 Oct 2023 10:57:16 +0200
Subject: [PATCH] draw_image_scale

---
 openglosd.cpp    | 36 ++++++++++++++++++++++++------------
 openglosd.h      |  5 ++++-
 softhdodroid.cpp |  2 ++
 3 files changed, 30 insertions(+), 13 deletions(-)

diff --git a/openglosd.cpp b/openglosd.cpp
index 6f7cd32..01acf7f 100644
--- a/openglosd.cpp
+++ b/openglosd.cpp
@@ -1738,8 +1738,8 @@ bool cOglCmdDrawImage::Execute(void)
 
     GLfloat x1 = x;                     //left
     GLfloat y1 = y;                     //top
-    GLfloat x2 = x + width;             //right
-    GLfloat y2 = y + height;            //bottom
+    GLfloat x2 = x + width * scaleX;    //right
+    GLfloat y2 = y + height * scaleY;   //bottom
 
     GLfloat quadVertices[] = {
         x1, y2, 0.0, 1.0,               // left bottom
@@ -1773,21 +1773,23 @@ bool cOglCmdDrawImage::Execute(void)
 }
 
 //------------------ cOglCmdDrawTexture --------------------
-cOglCmdDrawTexture::cOglCmdDrawTexture(cOglFb * fb, sOglImage * imageRef, GLint x, GLint y):cOglCmd(fb)
+cOglCmdDrawTexture::cOglCmdDrawTexture(cOglFb * fb, sOglImage * imageRef, GLint x, GLint y, double scaleX, double scaleY):cOglCmd(fb)
 {
     this->imageRef = imageRef;
     this->x = x;
     this->y = y;
+    this->scaleX = scaleX;
+    this->scaleY = scaleY;
 }
 
 bool cOglCmdDrawTexture::Execute(void)
 {
     if (imageRef->width <= 0 || imageRef->height <= 0)
         return false;
-    GLfloat x1 = x;                     //top
-    GLfloat y1 = y;                     //left
-    GLfloat x2 = x + imageRef->width;   //right
-    GLfloat y2 = y + imageRef->height;  //bottom
+    GLfloat x1 = x;                              //top
+    GLfloat y1 = y;                              //left
+    GLfloat x2 = x + imageRef->width * scaleX;   //right
+    GLfloat y2 = y + imageRef->height * scaleY;  //bottom
 
     GLfloat quadVertices[] = {
         // Pos    // TexCoords
@@ -2371,6 +2373,11 @@ void cOglPixmap::Fill(tColor Color)
 }
 
 void cOglPixmap::DrawImage(const cPoint & Point, const cImage & Image)
+{
+    DrawScaledImage(Point, Image);
+}
+
+void cOglPixmap::DrawScaledImage(const cPoint & Point, const cImage & Image, double FactorX, double FactorY, bool AntiAlias)
 {
     if (!oglThread->Active())
         return;
@@ -2380,12 +2387,17 @@ void cOglPixmap::DrawImage(const cPoint & Point, const cImage & Image)
         return;
     memcpy(argb, Image.Data(), sizeof(tColor) * Image.Width() * Image.Height());
 
-    oglThread->DoCmd(new cOglCmdDrawImage(fb, argb, Image.Width(), Image.Height(), Point.X(), Point.Y()));
+    oglThread->DoCmd(new cOglCmdDrawImage(fb, argb, Image.Width(), Image.Height(), Point.X(), Point.Y(), true, FactorX, FactorY));
     SetDirty();
-    MarkDrawPortDirty(cRect(Point, cSize(Image.Width(), Image.Height())).Intersected(DrawPort().Size()));
+    MarkDrawPortDirty(cRect(Point, cSize(Image.Width() * FactorX, Image.Height() * FactorY)).Intersected(DrawPort().Size()));
 }
 
 void cOglPixmap::DrawImage(const cPoint & Point, int ImageHandle)
+{
+    DrawScaledImage(Point, ImageHandle);
+}
+
+void cOglPixmap::DrawScaledImage(const cPoint & Point, int ImageHandle, double FactorX, double FactorY, bool AntiAlias)
 {
     if (!oglThread->Active())
         return;
@@ -2393,7 +2405,9 @@ void cOglPixmap::DrawImage(const cPoint & Point, int ImageHandle)
     if (ImageHandle < 0 && oglThread->GetImageRef(ImageHandle)) {
         sOglImage *img = oglThread->GetImageRef(ImageHandle);
 
-        oglThread->DoCmd(new cOglCmdDrawTexture(fb, img, Point.X(), Point.Y()));
+        oglThread->DoCmd(new cOglCmdDrawTexture(fb, img, Point.X(), Point.Y(), FactorX, FactorY));
+        SetDirty();
+        MarkDrawPortDirty(cRect(Point, cSize(img->width * FactorX, img->height * FactorY)).Intersected(DrawPort().Size()));
     }
     /*
        Fallback to VDR implementation, needs to separate cSoftOsdProvider from softhddevice.cpp
@@ -2402,8 +2416,6 @@ void cOglPixmap::DrawImage(const cPoint & Point, int ImageHandle)
        DrawImage(Point, *cSoftOsdProvider::GetImageData(ImageHandle));
        }
      */
-    SetDirty();
-    MarkDrawPortDirty(DrawPort());
 }
 
 void cOglPixmap::DrawPixel(const cPoint & Point, tColor Color)
diff --git a/openglosd.h b/openglosd.h
index 0529700..1985725 100644
--- a/openglosd.h
+++ b/openglosd.h
@@ -555,8 +555,9 @@ class cOglCmdDrawTexture:public cOglCmd
   private:
     sOglImage * imageRef;
     GLint x, y;
+    GLfloat scaleX, scaleY;
   public:
-     cOglCmdDrawTexture(cOglFb * fb, sOglImage * imageRef, GLint x, GLint y);
+     cOglCmdDrawTexture(cOglFb * fb, sOglImage * imageRef, GLint x, GLint y, double scaleX = 1.0f, double scaleY = 1.0f);
      virtual ~ cOglCmdDrawTexture(void)
     {
     };
@@ -682,6 +683,8 @@ class cOglPixmap:public cPixmap
     virtual void Fill(tColor Color);
     virtual void DrawImage(const cPoint & Point, const cImage & Image);
     virtual void DrawImage(const cPoint & Point, int ImageHandle);
+    virtual void DrawScaledImage(const cPoint & Point, const cImage & Image, double FactorX = 1.0f, double FactorY = 1.0f, bool AntiAlias = false);
+    virtual void DrawScaledImage(const cPoint & Point, int ImageHandle, double FactorX = 1.0f, double FactorY = 1.0f, bool AntiAlias = false);
     virtual void DrawPixel(const cPoint & Point, tColor Color);
     virtual void DrawBitmap(const cPoint & Point, const cBitmap & Bitmap, tColor ColorFg = 0, tColor ColorBg =
         0, bool Overlay = false);
diff --git a/softhdodroid.cpp b/softhdodroid.cpp
index d34baa9..7625609 100644
--- a/softhdodroid.cpp
+++ b/softhdodroid.cpp
@@ -644,6 +644,8 @@ public:
     virtual void Fill(tColor Color) { (void)Color; }
     virtual void DrawImage(const cPoint &Point, const cImage &Image) { (void)Point; (void)Image; }
     virtual void DrawImage(const cPoint &Point, int ImageHandle) { (void)Point; (void)ImageHandle; }
+    virtual void DrawScaledImage(const cPoint &Point, const cImage &Image, double FactorX = 1.0f, double FactorY = 1.0f, bool AntiAlias = false) { (void)Point; (void)Image; (void)FactorX; (void)FactorY; (void)AntiAlias; };
+    virtual void DrawScaledImage(const cPoint &Point, int ImageHandle, double FactorX = 1.0f, double FactorY = 1.0f, bool AntiAlias = false) { (void)Point; (void)ImageHandle;  (void)FactorX; (void)FactorY; (void)AntiAlias; };
     virtual void DrawPixel(const cPoint &Point, tColor Color) { (void)Point; (void)Color; }
     virtual void DrawBitmap(const cPoint &Point, const cBitmap &Bitmap, tColor ColorFg = 0, tColor ColorBg = 0, bool Overlay = false) {
         (void) Point; (void)Bitmap; (void)ColorFg; (void)ColorBg; (void)Overlay; }
-- 
2.30.2

