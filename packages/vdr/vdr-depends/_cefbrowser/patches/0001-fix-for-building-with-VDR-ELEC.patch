diff --git a/meson.build b/meson.build
index c35c7ce..a77e993 100644
--- a/meson.build
+++ b/meson.build
@@ -1,11 +1,13 @@
 project('cefbrowser', 'cpp', 'c',
   version : '0.1',
   default_options : ['warning_level=1', 'cpp_std=c++17', 'default_library=static', 'optimization=3', 'buildtype=debug' ],
-  meson_version: '>=0.63.0')
+  meson_version: '>=0.57.1')
 
 # add_global_arguments('-O3', language : 'cpp')
 
 arch=get_option('arch')
+subarch = '-march=' + get_option('subarch')
+install_prefix = get_option('prefix')
 
 cmake = import('cmake')
 CXX = meson.get_compiler('cpp')
@@ -23,9 +25,14 @@ cef_opt_var = cmake.subproject_options()
 if arch == 'arm'
     cef_opt_var.add_cmake_defines({'PROJECT_ARCH': 'armhf'})
 elif arch == 'arm64'
-    cef_opt_var.add_cmake_defines({'PROJECT_ARCH': 'aarch64'})
+    cef_opt_var.add_cmake_defines({'PROJECT_ARCH': 'arm64'})
+elif arch == 'x86_64'
+    cef_opt_var.add_cmake_defines({'PROJECT_ARCH': 'x86_64'})
 endif
 
+cef_opt_var.add_cmake_defines({'CMAKE_CXX_FLAGS': subarch})
+cef_opt_var.add_cmake_defines({'CMAKE_C_FLAGS': subarch})
+
 cef_opt_var.append_compile_args('cpp', '-Wno-unused-variable')
 cef_opt_var.add_cmake_defines({'CMAKE_BUILD_TYPE': 'Debug'})
 cef_proj = cmake.subproject('cef', options: cef_opt_var)
@@ -63,22 +70,7 @@ dep_crypto = dependency('libcrypto')
 
 # thrift
 # thrift
-thrift_opts = cmake.subproject_options()
-thrift_opts.add_cmake_defines({'WITH_AS3': 'OFF',
-                               'WITH_QT5': 'OFF',
-                               'BUILD_JAVA': 'OFF',
-                               'BUILD_JAVASCRIPT': 'OFF',
-                               'BUILD_PYTHON': 'OFF',
-                               'BUILD_TESTING': 'OFF',
-                               'WITH_C_GLIB': 'OFF',
-                               'WITH_OPENSSL': 'OFF',
-                               'BUILD_SHARED_LIBS': 'OFF',
-                               'BUILD_COMPILER': 'OFF',
-                               'CMAKE_INSTALL_PREFIX': '.',
-                               'CMAKE_POSITION_INDEPENDENT_CODE': 'ON' })
-
-thrift_proj = cmake.subproject('thrift', options: thrift_opts)
-thrift_dep = thrift_proj.get_variable('thrift_dep')
+thrift_dep = dependency('thrift')
 
 #
 # Build browser
@@ -108,14 +100,14 @@ exe = executable('cefbrowser', 'main.cpp', 'mainapp.cpp', 'logger.cpp',
                  include_directories : incdir,
                  cpp_args : browser_compile_args,
                  install : true,
-                 install_dir : meson.current_build_dir() + '/Release',
+                 link_args: '-lrt',
                  dependencies: [mini_dep, cef_lib, spdlog_dep, deps, sqlite3_dep, dep_ssl, dep_crypto, thrift_dep])
 
 
 #
 # install static content
 #
-install_subdir('static-content/js', install_dir : meson.current_build_dir() + '/Release')
-install_subdir('static-content/css', install_dir : meson.current_build_dir() + '/Release')
-install_subdir('static-content/database', install_dir : meson.current_build_dir() + '/Release')
-install_subdir('static-content/application', install_dir : meson.current_build_dir() + '/Release')
+install_subdir('static-content/js', install_dir : 'cefbrowser')
+install_subdir('static-content/css', install_dir : 'cefbrowser')
+install_subdir('static-content/database', install_dir : 'cefbrowser')
+install_subdir('static-content/application', install_dir : 'cefbrowser')
diff --git a/meson_options.txt b/meson_options.txt
index 83e87ea..c543615 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -1,2 +1,3 @@
 option('arch', type : 'combo', choices : ['x86', 'arm', 'arm64'], value : 'x86')
+option('subarch', type : 'string', value : 'armv8-a')
 option('debug_thrift', type: 'boolean', value: false, description: 'Enable more debug logging')
\ No newline at end of file
