diff -ru8bBwd a/meson.build b/meson.build
--- a/meson.build	2025-03-26 08:50:15.000000000 +0100
+++ b/meson.build	2025-03-26 12:08:04.833825238 +0100
@@ -1,16 +1,18 @@
 project('cefbrowser', 'cpp', 'c',
   version : '0.1',
   default_options : ['warning_level=1', 'cpp_std=c++17', 'default_library=static', 'optimization=3' ],
-  meson_version: '>=0.63.0')
+  meson_version: '>=0.57.1')
 
 add_global_arguments('-O3', language : 'cpp')
 
 arch=get_option('arch')
+subarch = '-march=' + get_option('subarch')
+install_prefix = get_option('prefix')
 
 cmake = import('cmake')
 CXX = meson.get_compiler('cpp')
 
 #
 # Download and extract subprojects
 #
 run_command('./setup.sh', arch, meson.current_build_dir(), check: false)
@@ -18,19 +20,24 @@
 #
 # Build cef
 #
 cef_opt_var = cmake.subproject_options()
 
 if arch == 'arm'
     cef_opt_var.add_cmake_defines({'PROJECT_ARCH': 'armhf'})
 elif arch == 'arm64'
-    cef_opt_var.add_cmake_defines({'PROJECT_ARCH': 'aarch64'})
+    cef_opt_var.add_cmake_defines({'PROJECT_ARCH': 'arm64'})
+elif arch == 'x86_64'
+    cef_opt_var.add_cmake_defines({'PROJECT_ARCH': 'x86_64'})
 endif
 
+cef_opt_var.add_cmake_defines({'CMAKE_CXX_FLAGS': subarch})
+cef_opt_var.add_cmake_defines({'CMAKE_C_FLAGS': subarch})
+
 cef_opt_var.append_compile_args('cpp', '-Wno-unused-variable')
 cef_opt_var.add_cmake_defines({'CMAKE_BUILD_TYPE': 'Debug'})
 cef_proj = cmake.subproject('cef', options: cef_opt_var)
 cef_lib = cef_proj.dependency('libcef_dll_wrapper')
 
 #
 # spdlog
 #
@@ -57,32 +64,17 @@
 
 #
 # ssl
 #
 dep_ssl = dependency('libssl')
 dep_crypto = dependency('libcrypto')
 
 # thrift
-# thrift
-thrift_opts = cmake.subproject_options()
-thrift_opts.add_cmake_defines({'WITH_AS3': 'OFF',
-                               'WITH_QT5': 'OFF',
-                               'BUILD_JAVA': 'OFF',
-                               'BUILD_JAVASCRIPT': 'OFF',
-                               'BUILD_PYTHON': 'OFF',
-                               'BUILD_TESTING': 'OFF',
-                               'WITH_C_GLIB': 'OFF',
-                               'WITH_OPENSSL': 'OFF',
-                               'BUILD_SHARED_LIBS': 'OFF',
-                               'BUILD_COMPILER': 'OFF',
-                               'CMAKE_POSITION_INDEPENDENT_CODE': 'ON' })
-
-thrift_proj = cmake.subproject('thrift', options: thrift_opts)
-thrift_dep = thrift_proj.get_variable('thrift_dep')
+thrift_dep = dependency('thrift')
 
 #
 # Build browser
 #
 shared_libs = ['cef', 'z']
 deps = []
 foreach lib_name : shared_libs
         deps += CXX.find_library(lib_name, dirs : [meson.project_source_root() + '/subprojects/cef/Release'])
@@ -97,19 +89,19 @@
                  'thrift-services/src-client/VdrClient.cpp', 'thrift-services/src-client/TranscoderClient.cpp',
                  'thrift-services/src-gen/CommonService.cpp', 'thrift-services/src-gen/common_types.cpp',
                  'thrift-services/src-gen/CefBrowser.cpp', 'thrift-services/src-gen/cefbrowser_types.cpp',
                  'thrift-services/src-gen/VdrPluginWeb.cpp', 'thrift-services/src-gen/pluginweb_types.cpp',
                  'thrift-services/src-gen/RemoteTranscoder.cpp', 'thrift-services/src-gen/remotetranscoder_types.cpp',
                  include_directories : incdir,
                  cpp_args : ['-DPHTTPLIB_ZLIB_SUPPORT', '-DCPPHTTPLIB_OPENSSL_SUPPORT'],
                  install : true,
-                 install_dir : meson.current_build_dir() + '/Release',
+                 link_args: '-lrt',
                  dependencies: [mini_dep, cef_lib, spdlog_dep, deps, sqlite3_dep, dep_ssl, dep_crypto, thrift_dep])
 
 
 #
 # install static content
 #
-install_subdir('static-content/js', install_dir : meson.current_build_dir() + '/Release')
-install_subdir('static-content/css', install_dir : meson.current_build_dir() + '/Release')
-install_subdir('static-content/database', install_dir : meson.current_build_dir() + '/Release')
-install_subdir('static-content/application', install_dir : meson.current_build_dir() + '/Release')
+install_subdir('static-content/js', install_dir : 'cefbrowser')
+install_subdir('static-content/css', install_dir : 'cefbrowser')
+install_subdir('static-content/database', install_dir : 'cefbrowser')
+install_subdir('static-content/application', install_dir : 'cefbrowser')
diff -ru8bBwd a/meson_options.txt b/meson_options.txt
--- a/meson_options.txt	2025-03-26 08:50:15.000000000 +0100
+++ b/meson_options.txt	2025-03-26 12:05:05.539249752 +0100
@@ -1 +1,2 @@
 option('arch', type : 'combo', choices : ['x86', 'arm', 'arm64'], value : 'x86')
+option('subarch', type : 'string', value : 'armv8-a')
diff -ru8bBwd a/subprojects/packagefiles/mini-0.9.14/meson.build b/subprojects/packagefiles/mini-0.9.14/meson.build
--- a/subprojects/packagefiles/mini-0.9.14/meson.build	2025-03-26 08:50:15.000000000 +0100
+++ b/subprojects/packagefiles/mini-0.9.14/meson.build	2025-03-26 12:05:05.539249752 +0100
@@ -1,15 +1,15 @@
 project(
   'mINI',
   'c', 'cpp',
   version: '0.8.5',
   license: 'Apache-2.0 license',
   default_options: ['cpp_std=c++17'],
-  meson_version: '>=0.63.0',
+  meson_version: '>=0.57.1',
 )
 
 inc = include_directories('src')
 
 mini_dependencies = []
 mini_compile_args = ['-O3']
 
 mini_dep = declare_dependency(
diff -ru8bBwd a/subprojects/packagefiles/tiny-process-library-4bf0e59e64f18d3080a1ce4e853775de2181e993/meson.build b/subprojects/packagefiles/tiny-process-library-4bf0e59e64f18d3080a1ce4e853775de2181e993/meson.build
--- a/subprojects/packagefiles/tiny-process-library-4bf0e59e64f18d3080a1ce4e853775de2181e993/meson.build	2025-03-26 08:50:15.000000000 +0100
+++ b/subprojects/packagefiles/tiny-process-library-4bf0e59e64f18d3080a1ce4e853775de2181e993/meson.build	2025-03-26 12:05:05.539249752 +0100
@@ -1,15 +1,15 @@
 project(
   'tiny_process_library',
   'cpp',
   version: '4bf0e59e64f18d3080a1ce4e853775de2181e993',
   license: 'MIT',
   default_options: ['cpp_std=c++17'],
-  meson_version: '>=0.63.0',
+  meson_version: '>=0.57.1',
 )
 
 src = files(
   'process.cpp',
   'process_unix.cpp',
 )
 
 inc = include_directories('.')
