diff --git a/board/generic/g12b_generic/firmware/scp_task/g12b_generic_pwr_ctrl.c b/board/generic/g12b_generic/firmware/scp_task/g12b_generic_pwr_ctrl.c
index 0ed0bc4..587ccf8 100644
--- a/board/generic/g12b_generic/firmware/scp_task/g12b_generic_pwr_ctrl.c
+++ b/board/generic/g12b_generic/firmware/scp_task/g12b_generic_pwr_ctrl.c
@@ -186,23 +186,54 @@ static void get_wakeup_source(void *response, unsigned int suspend_from)
 }
 extern void __switch_idle_task(void);
 
+#undef P_ISA_TIMER_MUX
+#undef P_ISA_TIMERA
+#undef AO_DEBUG_REG2
+#define P_ISA_TIMER_MUX                            (volatile unsigned int *)((0x3c50  << 2) + 0xffd00000)
+#define P_ISA_TIMERA                               (volatile unsigned int *)((0x3c51  << 2) + 0xffd00000)
+#define AO_DEBUG_REG2                              (0xff800000 + (0x02a << 2))
+
+void wakeup_timer_setup(void)
+{
+	/* 1ms resolution*/
+	unsigned value;
+	value = readl(P_ISA_TIMER_MUX);
+	value |= ((0x3<<0) | (0x1<<12) | (0x1<<16));
+	writel(value, P_ISA_TIMER_MUX);
+	/*1000ms generate an interrupt*/
+	writel(1000, P_ISA_TIMERA);
+}
+
+void wakeup_timer_clear(void)
+{
+	unsigned value;
+	value = readl(P_ISA_TIMER_MUX);
+	value &= ~((0x1<<12) | (0x1<<16));
+	writel(value, P_ISA_TIMER_MUX);
+}
 static unsigned int detect_key(unsigned int suspend_from)
 {
 	int exit_reason = 0;
+	unsigned int time_out = readl(AO_DEBUG_REG2);
 	unsigned *irq = (unsigned *)WAKEUP_SRC_IRQ_ADDR_BASE;
 
 #ifdef CONFIG_GPIO_WAKEUP
 	unsigned int is_gpiokey = 0;
 #endif
+    dbg_print("CoreELEC time_out = ", time_out);
+	//dbg_print("CoreELEC ir_pwr_key_mask = ", usr_pwr_key_mask.val);
+	//dbg_print("CoreELEC system_power    = ", enable_5V_system_power.val);
+	//dbg_print("CoreELEC wake_on_lan     = ", enable_wol.val);
+	//dbg_prints("CoreELEC cec_osd_name    = ");
+	//dbg_prints(cec_osd_name.val);
+	//dbg_prints("\n");
+
+	/* setup wakeup resources*/
+	/*auto suspend: timerA 1s resolution*/
+	if (time_out != 0) {
+		wakeup_timer_setup();
+	}
 
-	dbg_print("CoreELEC ir_pwr_key      = ", usr_pwr_key.val);
-	dbg_print("CoreELEC usr_ir_proto    = ", usr_ir_proto.val);
-	dbg_print("CoreELEC ir_pwr_key_mask = ", usr_pwr_key_mask.val);
-	dbg_print("CoreELEC system_power    = ", enable_5V_system_power.val);
-	dbg_print("CoreELEC wake_on_lan     = ", enable_wol.val);
-	dbg_prints("CoreELEC cec_osd_name    = ");
-	dbg_prints(cec_osd_name.val);
-	dbg_prints("\n");
 
 	backup_remote_register();
 	init_remote();
@@ -230,13 +261,27 @@ static unsigned int detect_key(unsigned int suspend_from)
 #endif
 		if (irq[IRQ_AO_IR_DEC] == IRQ_AO_IR_DEC_NUM) {
 			irq[IRQ_AO_IR_DEC] = 0xFFFFFFFF;
-			if (remote_detect_key())
+			if (remote_detect_key()) {
+			    dbg_prints("CoreELEC IR IRQ\n");
 				exit_reason = REMOTE_WAKEUP;
+			}	
 		}
 
-		if (irq[IRQ_VRTC] == IRQ_VRTC_NUM) {
-			irq[IRQ_VRTC] = 0xFFFFFFFF;
-			exit_reason = RTC_WAKEUP;
+//		if (irq[IRQ_VRTC] == IRQ_VRTC_NUM) {
+//			irq[IRQ_VRTC] = 0xFFFFFFFF;
+//			dbg_prints("CoreELEC IRQ VRTC \n");
+//			//exit_reason = RTC_WAKEUP;
+//		}
+
+		if (irq[IRQ_TIMERA] == IRQ_TIMERA_NUM) {
+			irq[IRQ_TIMERA] = 0xFFFFFFFF;
+			if (time_out != 0)
+				time_out -= 1;
+			if (time_out == 0) {
+				wakeup_timer_clear();
+				dbg_prints("CoreELEC IRQ Softtimer\n");
+				exit_reason = AUTO_WAKEUP;
+			}
 		}
 
 #if defined(CONFIG_WOL) || defined(CONFIG_BT_WAKEUP)
diff --git a/board/generic/g12a_generic/firmware/scp_task/g12b_generic_pwr_ctrl.c b/board/generic/g12a_generic/firmware/scp_task/g12b_generic_pwr_ctrl.c
index 0ed0bc4..587ccf8 100644
--- a/board/generic/g12a_generic/firmware/scp_task/g12a_generic_pwr_ctrl.c
+++ b/board/generic/g12a_generic/firmware/scp_task/g12a_generic_pwr_ctrl.c
@@ -186,23 +186,54 @@ static void get_wakeup_source(void *response, unsigned int suspend_from)
 }
 extern void __switch_idle_task(void);
 
+#undef P_ISA_TIMER_MUX
+#undef P_ISA_TIMERA
+#undef AO_DEBUG_REG2
+#define P_ISA_TIMER_MUX                            (volatile unsigned int *)((0x3c50  << 2) + 0xffd00000)
+#define P_ISA_TIMERA                               (volatile unsigned int *)((0x3c51  << 2) + 0xffd00000)
+#define AO_DEBUG_REG2                              (0xff800000 + (0x02a << 2))
+
+void wakeup_timer_setup(void)
+{
+	/* 1ms resolution*/
+	unsigned value;
+	value = readl(P_ISA_TIMER_MUX);
+	value |= ((0x3<<0) | (0x1<<12) | (0x1<<16));
+	writel(value, P_ISA_TIMER_MUX);
+	/*1000ms generate an interrupt*/
+	writel(1000, P_ISA_TIMERA);
+}
+
+void wakeup_timer_clear(void)
+{
+	unsigned value;
+	value = readl(P_ISA_TIMER_MUX);
+	value &= ~((0x1<<12) | (0x1<<16));
+	writel(value, P_ISA_TIMER_MUX);
+}
 static unsigned int detect_key(unsigned int suspend_from)
 {
 	int exit_reason = 0;
+	unsigned int time_out = readl(AO_DEBUG_REG2);
 	unsigned *irq = (unsigned *)WAKEUP_SRC_IRQ_ADDR_BASE;
 
 #ifdef CONFIG_GPIO_WAKEUP
 	unsigned int is_gpiokey = 0;
 #endif
+    dbg_print("CoreELEC time_out = ", time_out);
+	//dbg_print("CoreELEC ir_pwr_key_mask = ", usr_pwr_key_mask.val);
+	//dbg_print("CoreELEC system_power    = ", enable_5V_system_power.val);
+	//dbg_print("CoreELEC wake_on_lan     = ", enable_wol.val);
+	//dbg_prints("CoreELEC cec_osd_name    = ");
+	//dbg_prints(cec_osd_name.val);
+	//dbg_prints("\n");
+
+	/* setup wakeup resources*/
+	/*auto suspend: timerA 1s resolution*/
+	if (time_out != 0) {
+		wakeup_timer_setup();
+	}
 
-	dbg_print("CoreELEC ir_pwr_key      = ", usr_pwr_key.val);
-	dbg_print("CoreELEC usr_ir_proto    = ", usr_ir_proto.val);
-	dbg_print("CoreELEC ir_pwr_key_mask = ", usr_pwr_key_mask.val);
-	dbg_print("CoreELEC system_power    = ", enable_5V_system_power.val);
-	dbg_print("CoreELEC wake_on_lan     = ", enable_wol.val);
-	dbg_prints("CoreELEC cec_osd_name    = ");
-	dbg_prints(cec_osd_name.val);
-	dbg_prints("\n");
 
 	backup_remote_register();
 	init_remote();
@@ -230,13 +261,27 @@ static unsigned int detect_key(unsigned int suspend_from)
 #endif
 		if (irq[IRQ_AO_IR_DEC] == IRQ_AO_IR_DEC_NUM) {
 			irq[IRQ_AO_IR_DEC] = 0xFFFFFFFF;
-			if (remote_detect_key())
+			if (remote_detect_key()) {
+			    dbg_prints("CoreELEC IR IRQ\n");
 				exit_reason = REMOTE_WAKEUP;
+			}	
 		}
 
-		if (irq[IRQ_VRTC] == IRQ_VRTC_NUM) {
-			irq[IRQ_VRTC] = 0xFFFFFFFF;
-			exit_reason = RTC_WAKEUP;
+//		if (irq[IRQ_VRTC] == IRQ_VRTC_NUM) {
+//			irq[IRQ_VRTC] = 0xFFFFFFFF;
+//			dbg_prints("CoreELEC IRQ VRTC \n");
+//			//exit_reason = RTC_WAKEUP;
+//		}
+
+		if (irq[IRQ_TIMERA] == IRQ_TIMERA_NUM) {
+			irq[IRQ_TIMERA] = 0xFFFFFFFF;
+			if (time_out != 0)
+				time_out -= 1;
+			if (time_out == 0) {
+				wakeup_timer_clear();
+				dbg_prints("CoreELEC IRQ Softtimer\n");
+				exit_reason = AUTO_WAKEUP;
+			}
 		}
 
 #if defined(CONFIG_WOL) || defined(CONFIG_BT_WAKEUP)
