diff --git a/config.c b/config.c
index 43c3cbbb..3e7537bd 100644
--- a/config.c
+++ b/config.c
@@ -409,6 +409,8 @@ cSetup::cSetup(void)
   SubtitleBgTransparency = 0;
   EPGLanguages[0] = -1;
   EPGScanTimeout = 5;
+  EPGScanWithPause = 0;
+  EPGScanMaxChannel = 0;
   EPGBugfixLevel = 3;
   EPGLinger = 0;
   SVDRPTimeout = 300;
@@ -637,6 +639,8 @@ bool cSetup::Parse(const char *Name, const char *Value)
   else if (!strcasecmp(Name, "SubtitleBgTransparency")) SubtitleBgTransparency = atoi(Value);
   else if (!strcasecmp(Name, "EPGLanguages"))        return ParseLanguages(Value, EPGLanguages);
   else if (!strcasecmp(Name, "EPGScanTimeout"))      EPGScanTimeout     = atoi(Value);
+  else if (!strcasecmp(Name, "EPGScanMaxChannel"))   EPGScanMaxChannel  = atoi(Value);
+  else if (!strcasecmp(Name, "EPGScanWithPause"))    EPGScanWithPause   = atoi(Value);
   else if (!strcasecmp(Name, "EPGBugfixLevel"))      EPGBugfixLevel     = atoi(Value);
   else if (!strcasecmp(Name, "EPGLinger"))           EPGLinger          = atoi(Value);
   else if (!strcasecmp(Name, "SVDRPTimeout"))        SVDRPTimeout       = atoi(Value);
@@ -769,6 +773,8 @@ bool cSetup::Save(void)
   Store("SubtitleBgTransparency", SubtitleBgTransparency);
   StoreLanguages("EPGLanguages", EPGLanguages);
   Store("EPGScanTimeout",     EPGScanTimeout);
+  Store("EPGScanMaxChannel",  EPGScanMaxChannel);
+  Store("EPGScanWithPause",   EPGScanWithPause);
   Store("EPGBugfixLevel",     EPGBugfixLevel);
   Store("EPGLinger",          EPGLinger);
   Store("SVDRPTimeout",       SVDRPTimeout);
diff --git a/config.h b/config.h
index e728c7ed..9c24d80c 100644
--- a/config.h
+++ b/config.h
@@ -291,6 +291,8 @@ public:
   int SubtitleOffset;
   int SubtitleFgTransparency, SubtitleBgTransparency;
   int EPGLanguages[I18N_MAX_LANGUAGES + 1];
+  int EPGScanMaxChannel;
+  int EPGScanWithPause;
   int EPGScanTimeout;
   int EPGBugfixLevel;
   int EPGLinger;
diff --git a/eitscan.c b/eitscan.c
index 1ff8b954..bfe91378 100644
--- a/eitscan.c
+++ b/eitscan.c
@@ -58,7 +58,7 @@ void cScanList::AddTransponders(const cList<cChannel> *Channels)
 
 void cScanList::AddTransponder(const cChannel *Channel)
 {
-  if (Channel->Source() && Channel->Transponder()) {
+  if (Channel->Source() && Channel->Transponder() && ((Setup.EPGScanMaxChannel <= 0) || (Setup.EPGScanMaxChannel > 0 && Channel->Number() < Setup.EPGScanMaxChannel))) {
      for (cScanData *sd = First(); sd; sd = Next(sd)) {
          if (sd->Source() == Channel->Source() && ISTRANSPONDER(sd->Transponder(), Channel->Transponder()))
             return;
@@ -92,6 +92,7 @@ cEITScanner EITScanner;
 cEITScanner::cEITScanner(void)
 {
   lastScan = lastActivity = time(NULL);
+  firstCall = true;
   currentChannel = 0;
   scanList = NULL;
   transponderList = NULL;
@@ -130,7 +131,11 @@ void cEITScanner::Process(void)
   if (Setup.EPGScanTimeout || !lastActivity) { // !lastActivity means a scan was forced
      time_t now = time(NULL);
      if (now - lastScan > ScanTimeout && now - lastActivity > ActivityTimeout) {
-        cStateKey StateKey;
+        if (!scanList && Setup.EPGScanWithPause && lastActivity && !firstCall && now - lastScan < Setup.EPGScanTimeout * 3600) {
+           // pause for Setup.EPGScanTimeout hours
+           return;
+           }
+	cStateKey StateKey;
         if (const cChannels *Channels = cChannels::GetChannelsRead(StateKey, 10)) {
            if (!scanList) {
               scanList = new cScanList;
@@ -140,7 +145,9 @@ void cEITScanner::Process(void)
                  transponderList = NULL;
                  }
               scanList->AddTransponders(Channels);
-              }
+              dsyslog("EIT scan: %i scanList entries", scanList->Count());
+	      firstCall = true; // prevents pause
+	   }
            bool AnyDeviceSwitched = false;
            for (int i = 0; i < cDevice::NumDevices(); i++) {
                cDevice *Device = cDevice::GetDevice(i);
@@ -164,11 +171,12 @@ void cEITScanner::Process(void)
                                            Skins.Message(mtInfo, tr("Starting EPG scan"));
                                            }
                                         }
-                                     //dsyslog("EIT scan: device %d  source  %-8s tp %5d", Device->DeviceNumber() + 1, *cSource::ToString(Channel->Source()), Channel->Transponder());
+                                     dsyslog("EIT scan: %i device %d  source  %-8s tp %5d", scanList->Count(), Device->DeviceNumber() + 1, *cSource::ToString(Channel->Source()), Channel->Transponder());
                                      Device->SwitchChannel(Channel, false);
                                      scanList->Del(ScanData);
                                      AnyDeviceSwitched = true;
-                                     break;
+                                     firstCall = false;
+				     break;
                                      }
                                   }
                                }
diff --git a/eitscan.h b/eitscan.h
index 128b0b0a..23a28432 100644
--- a/eitscan.h
+++ b/eitscan.h
@@ -24,6 +24,7 @@ private:
          ScanTimeout = 20
        };
   time_t lastScan, lastActivity;
+  bool firstCall;
   int currentChannel;
   cScanList *scanList;
   cTransponderList *transponderList;
diff --git a/menu.c b/menu.c
index dd5b0c9e..f72c3dad 100644
--- a/menu.c
+++ b/menu.c
@@ -3652,6 +3652,8 @@ void cMenuSetupEPG::Setup(void)
 
   Clear();
 
+  Add(new cMenuEditIntItem( tr("Setup.EPG$EPG scan max channel number (0=all)"), &data.EPGScanMaxChannel));
+  Add(new cMenuEditBoolItem(tr("Setup.EPG$EPG pause after scan"),                &data.EPGScanWithPause));
   Add(new cMenuEditIntItem( tr("Setup.EPG$EPG scan timeout (h)"),      &data.EPGScanTimeout));
   Add(new cMenuEditIntItem( tr("Setup.EPG$EPG bugfix level"),          &data.EPGBugfixLevel, 0, MAXEPGBUGFIXLEVEL));
   Add(new cMenuEditIntItem( tr("Setup.EPG$EPG linger time (min)"),     &data.EPGLinger, 0));
diff --git a/po/de_DE.po b/po/de_DE.po
index db36423d..419bd1e5 100644
--- a/po/de_DE.po
+++ b/po/de_DE.po
@@ -9,7 +9,7 @@ msgid ""
 msgstr ""
 "Project-Id-Version: VDR 2.6.0\n"
 "Report-Msgid-Bugs-To: <vdr-bugs@tvdr.de>\n"
-"POT-Creation-Date: 2022-12-01 14:54+0100\n"
+"POT-Creation-Date: 2024-02-04 15:32+0100\n"
 "PO-Revision-Date: 2015-02-10 13:45+0100\n"
 "Last-Translator: Klaus Schmidinger <vdr@tvdr.de>\n"
 "Language-Team: German <vdr@linuxtv.org>\n"
@@ -1023,6 +1023,12 @@ msgstr "EPG"
 msgid "Button$Scan"
 msgstr "Scan"
 
+msgid "Setup.EPG$EPG scan max channel number (0=all)"
+msgstr "Maximaler Kanal (0=alle)"
+
+msgid "Setup.EPG$EPG pause after scan"
+msgstr "Pause nach Scan"
+
 msgid "Setup.EPG$EPG scan timeout (h)"
 msgstr "Zeit bis zur EPG-Aktualisierung (h)"
 
