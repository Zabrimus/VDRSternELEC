--- a/recording.c 2025/04/15 19:38:46     5.40
+++ b/recording.c 2025/04/15 20:23:11
@@ -497,13 +497,13 @@
   errors = Errors;
 }

-bool cRecordingInfo::Read(FILE *f)
+bool cRecordingInfo::Read(FILE *f, bool Force)
 {
   if (ownEvent) {
      struct stat st;
      if (fstat(fileno(f), &st))
         return false;
-     if (modified == st.st_mtime)
+     if (modified == st.st_mtime && !Force)
         return true;
      if (modified) {
         delete ownEvent;
@@ -614,13 +614,13 @@
   return true;
 }

-bool cRecordingInfo::Read(void)
+bool cRecordingInfo::Read(bool Force)
 {
   bool Result = false;
   if (fileName) {
      FILE *f = fopen(fileName, "r");
      if (f) {
-        if (Read(f))
+        if (Read(f, Force))
            Result = true;
         else
            esyslog("ERROR: EPG data problem in file %s", fileName);
@@ -1281,9 +1281,9 @@
   return cMarks::DeleteMarksFile(this);
 }

-void cRecording::ReadInfo(void)
+void cRecording::ReadInfo(bool Force)
 {
-  info->Read();
+  info->Read(Force);
 }

 bool cRecording::WriteInfo(const char *OtherFileName)
@@ -1729,7 +1729,7 @@
 void cRecordings::UpdateByName(const char *FileName)
 {
   if (cRecording *Recording = GetByName(FileName))
-     Recording->ReadInfo();
+     Recording->ReadInfo(true);
 }

 int cRecordings::TotalFileSizeMB(void) const
--- a/recording.h 2025/04/15 19:38:46     5.14
+++ b/recording.h 2025/04/15 20:17:50
@@ -80,7 +80,7 @@
   char *fileName;
   int errors;
   cRecordingInfo(const cChannel *Channel = NULL, const cEvent *Event = NULL);
-  bool Read(FILE *f);
+  bool Read(FILE *f, bool Force = false);
 public:
   cRecordingInfo(const char *FileName);
   ~cRecordingInfo();
@@ -110,7 +110,7 @@
   int Errors(void) const { return errors; } // returns -1 if undefined
   void SetErrors(int Errors);
   bool Write(FILE *f, const char *Prefix = "") const;
-  bool Read(void);
+  bool Read(bool Force = false);
   bool Write(void) const;
   void SetData(const char *Title, const char *ShortText, const char *Description);
   void SetAux(const char *Aux);
@@ -201,7 +201,7 @@
        ///< Deletes the editing marks from this recording (if any).
        ///< Returns true if the operation was successful. If there is no marks file
        ///< for this recording, it also returns true.
-  void ReadInfo(void);
+  void ReadInfo(bool Force = false);
   bool WriteInfo(const char *OtherFileName = NULL);
        ///< Writes in info file of this recording. If OtherFileName is given, the info
        ///< file will be written under that recording file name instead of this