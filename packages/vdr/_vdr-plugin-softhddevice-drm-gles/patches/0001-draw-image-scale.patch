From 61c1bad5a616c3214aa9d4a461d66a07cfaade83 Mon Sep 17 00:00:00 2001
From: Andreas Baierl <ichgeh@imkreisrum.de>
Date: Mon, 25 Sep 2023 15:08:34 +0200
Subject: [PATCH] openglosd: implement DrawScaledImage()

Signed-off-by: Andreas Baierl <ichgeh@imkreisrum.de>
---
 openglosd.cpp | 52 ++++++++++++++++++++++++++-------------------------
 openglosd.h   |  5 ++++-
 2 files changed, 31 insertions(+), 26 deletions(-)

diff --git a/openglosd.cpp b/openglosd.cpp
index c5d57f0..9f58691 100644
--- a/openglosd.cpp
+++ b/openglosd.cpp
@@ -1899,10 +1899,10 @@ bool cOglCmdDrawImage::Execute(void) {
     GL_CHECK(glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR));
     GL_CHECK(glBindTexture(GL_TEXTURE_2D, 0));
 
-    GLfloat x1 = x;          //left
-    GLfloat y1 = y;          //top
-    GLfloat x2 = x + width;  //right
-    GLfloat y2 = y + height; //bottom
+    GLfloat x1 = x;                   //left
+    GLfloat y1 = y;                   //top
+    GLfloat x2 = x + width * scaleX;  //right
+    GLfloat y2 = y + height * scaleY; //bottom
 
     GLfloat quadVertices[] = {
         x1, y2,   0.0, 1.0,     // left bottom
@@ -1937,10 +1937,12 @@ bool cOglCmdDrawImage::Execute(void) {
 }
 
 //------------------ cOglCmdDrawTexture --------------------
-cOglCmdDrawTexture::cOglCmdDrawTexture(cOglFb *fb, sOglImage *imageRef, GLint x, GLint y): cOglCmd(fb) {
+cOglCmdDrawTexture::cOglCmdDrawTexture(cOglFb *fb, sOglImage *imageRef, GLint x, GLint y, double scaleX, double scaleY): cOglCmd(fb) {
     this->imageRef = imageRef;
     this->x = x;
     this->y = y;
+    this->scaleX = scaleX;
+    this->scaleY = scaleY;
     this->bcolor = BORDERCOLOR;
 }
 
@@ -1948,10 +1950,10 @@ bool cOglCmdDrawTexture::Execute(void) {
     if (imageRef->width <= 0 || imageRef->height <= 0)
         return false;
 
-    GLfloat x1 = x;                    //top
-    GLfloat y1 = y;                    //left
-    GLfloat x2 = x + imageRef->width;  //right
-    GLfloat y2 = y + imageRef->height; //bottom
+    GLfloat x1 = x;                             //top
+    GLfloat y1 = y;                             //left
+    GLfloat x2 = x + imageRef->width * scaleX;  //right
+    GLfloat y2 = y + imageRef->height * scaleY; //bottom
 
     GLfloat quadVertices[] = {
         // Pos    // TexCoords
@@ -2417,6 +2419,14 @@ void cOglPixmap::Fill(tColor Color) {
 }
 
 void cOglPixmap::DrawImage(const cPoint &Point, const cImage &Image) {
+    DrawScaledImage(Point, Image);
+}
+
+void cOglPixmap::DrawImage(const cPoint &Point, int ImageHandle) {
+    DrawScaledImage(Point, ImageHandle);
+}
+
+void cOglPixmap::DrawScaledImage(const cPoint &Point, const cImage &Image, double FactorX, double FactorY, bool AntiAlias) {
     if (!oglThread->Active())
         return;
     tColor *argb = MALLOC(tColor, Image.Width() * Image.Height());
@@ -2424,34 +2434,26 @@ void cOglPixmap::DrawImage(const cPoint &Point, const cImage &Image) {
         return;
     memcpy(argb, Image.Data(), sizeof(tColor) * Image.Width() * Image.Height());
 
-    oglThread->DoCmd(new cOglCmdDrawImage(fb, argb, Image.Width(), Image.Height(), Point.X(), Point.Y()));
+    oglThread->DoCmd(new cOglCmdDrawImage(fb, argb, Image.Width(), Image.Height(), Point.X(), Point.Y(), true, FactorX, FactorY));
 #ifdef GRIDRECT
-    DrawGridRect(cRect(Point.X(), Point.Y(), Image.Width(), Image.Height()), GRIDPOINTOFFSET, GRIDPOINTSIZE, GRIDPOINTCLR, GRIDPOINTBG, tinyfont);
+    DrawGridRect(cRect(Point.X(), Point.Y(), Image.Width() * FactorX, Image.Height() * FactorY), GRIDPOINTOFFSET, GRIDPOINTSIZE, GRIDPOINTCLR, GRIDPOINTBG, tinyfont);
 #endif
-
     SetDirty();
-    MarkDrawPortDirty(cRect(Point, cSize(Image.Width(), Image.Height())).Intersected(DrawPort().Size()));
+    MarkDrawPortDirty(cRect(Point, cSize(Image.Width() * FactorX, Image.Height() * FactorY)).Intersected(DrawPort().Size()));
 }
 
-void cOglPixmap::DrawImage(const cPoint &Point, int ImageHandle) {
+void cOglPixmap::DrawScaledImage(const cPoint &Point, int ImageHandle, double FactorX, double FactorY, bool AntiAlias) {
     if (!oglThread->Active())
         return;
     if (ImageHandle < 0 && oglThread->GetImageRef(ImageHandle)) {
             sOglImage *img = oglThread->GetImageRef(ImageHandle);
-            oglThread->DoCmd(new cOglCmdDrawTexture(fb, img, Point.X(), Point.Y()));
+            oglThread->DoCmd(new cOglCmdDrawTexture(fb, img, Point.X(), Point.Y(), FactorX, FactorY));
 #ifdef GRIDRECT
-            DrawGridRect(cRect(Point.X(), Point.Y(), img->width, img->height), GRIDPOINTOFFSET, GRIDPOINTSIZE, GRIDPOINTCLR, GRIDPOINTBG, tinyfont);
+            DrawGridRect(cRect(Point.X(), Point.Y(), img->width * FactorX, img->height * FactorY), GRIDPOINTOFFSET, GRIDPOINTSIZE, GRIDPOINTCLR, GRIDPOINTBG, tinyfont);
 #endif
+            SetDirty();
+            MarkDrawPortDirty(cRect(Point, cSize(img->width * FactorX, img->height * FactorY)).Intersected(DrawPort().Size()));
     }
-    /*
-    Fallback to VDR implementation, needs to separate cSoftOsdProvider from softhddevice.cpp 
-    else {
-        if (cSoftOsdProvider::GetImageData(ImageHandle))
-            DrawImage(Point, *cSoftOsdProvider::GetImageData(ImageHandle));
-    }
-    */
-    SetDirty();
-    MarkDrawPortDirty(DrawPort());
 }
 
 void cOglPixmap::DrawPixel(const cPoint &Point, tColor Color) {
diff --git a/openglosd.h b/openglosd.h
index a3de390..988026c 100644
--- a/openglosd.h
+++ b/openglosd.h
@@ -474,9 +474,10 @@ class cOglCmdDrawTexture : public cOglCmd {
 private:
     sOglImage *imageRef;
     GLint x, y;
+    GLfloat scaleX, scaleY;
     GLint bcolor;
 public:
-    cOglCmdDrawTexture(cOglFb *fb, sOglImage *imageRef, GLint x, GLint y);
+    cOglCmdDrawTexture(cOglFb *fb, sOglImage *imageRef, GLint x, GLint y, double scaleX = 1.0f, double scaleY = 1.0f);
     virtual ~cOglCmdDrawTexture(void) {};
     virtual const char* Description(void) { return "Draw Texture"; }
     virtual bool Execute(void);
@@ -571,6 +572,8 @@ public:
     virtual void Fill(tColor Color);
     virtual void DrawImage(const cPoint &Point, const cImage &Image);
     virtual void DrawImage(const cPoint &Point, int ImageHandle);
+    virtual void DrawScaledImage(const cPoint &Point, const cImage &Image, double FactorX = 1.0f, double FactorY = 1.0f, bool AntiAlias = false);
+    virtual void DrawScaledImage(const cPoint &Point, int ImageHandle, double FactorX = 1.0f, double FactorY = 1.0f, bool AntiAlias = false);
     virtual void DrawPixel(const cPoint &Point, tColor Color);
     virtual void DrawBitmap(const cPoint &Point, const cBitmap &Bitmap, tColor ColorFg = 0, tColor ColorBg = 0, bool Overlay = false);
     virtual void DrawText(const cPoint &Point, const char *s, tColor ColorFg, tColor ColorBg, const cFont *Font, int Width = 0, int Height = 0, int Alignment = taDefault);
-- 
2.30.2

